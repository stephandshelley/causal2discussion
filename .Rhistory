# Chunk 1: setup
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 6/DataStructure0.RData")
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 6/DataStructure2.RData")
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
# Chunk 2: truncate
bound <- function(x) {
x[x>.99] <- .99
x[x<.01] <- .01
return(x)
}
# Chunk 3: parametric_gcomp
get_TSM_param_gcomp0 <- function(abar) {
QY_reg <- glm(Y ~ L1 + A1 + L2 + A2, data = ObsData0, family = "binomial")
QL2_reg <- glm(L2 ~ L1 + A1, data = ObsData0, family = "binomial")
S <- 10000
l1 <- sample(ObsData0$L1, S, replace=T)
Q_L2 <- predict(QL2_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1]))
l2 <- rbinom(S, size = 1, prob = Q_L2)
Q_Y <- predict(QY_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2]))
y <- rbinom(S, size = 1, prob = Q_Y)
y_bar <- mean(y)
return(y_bar)
}
# Chunk 4: est_1
EY_11_Param <- get_TSM_param_gcomp0(abar = c(1,1)); EY_11_Param
# Chunk 5: interated_conditional_expectation_gcomp
ICE_gcomp0_fun <- function(abar) {
intervened_data <- ObsData0
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
Q3_reg <- glm(Y ~ L1 + A1 + L2 + A2, family = "binomial", data = ObsData0)
Q3 <- predict(Q3_reg, type = "response", newdata = intervened_data)
Q2_reg <- glm(Q3 ~ L1 + A1, family = "binomial", data = ObsData0)
Q2 <- predict(Q2_reg, type = "response", newdata = intervened_data)
Q2_bar <- mean(Q2)
return(Q2_bar)
}
# Chunk 6: est_2
EY_11_ice0 <- ICE_gcomp0_fun(abar = c(1,1)); EY_11_ice0
# Chunk 7: TMLE
get_TSM_tmle0 <- function(abar) {
intervened_data <- ObsData0
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
gA1_reg <- glm(A1 ~ L1, family = "binomial", data = ObsData0)
gA2_reg <- glm(A2 ~ L1 + L2, family = "binomial", data = ObsData0)
g_abar1_1 <- predict(gA1_reg, type = "response")
g_abar2_1 <- predict(gA2_reg, type = "response")
I1 <- ObsData0$A1 == abar[1]
I2 <- ObsData0$A1 == abar[1] & ObsData0$A2 == abar[2]
# t = 3
Q3_reg <- glm(Y ~ L1 + A1 + L2 + A2, family = "binomial", data = ObsData0)
logit_Q3 <- predict(Q3_reg, type = "link", newdata = intervened_data)
H3 <- I2/bound(g_abar1_1 * g_abar2_1)
Q3_reg_update <- glm(Y ~ offset(logit_Q3), weights = H3,
family = "binomial", data = ObsData0)
Q3_star <- predict(Q3_reg_update, type = "response")
# t = 2
Q2_reg <- glm(Q3_star ~ L1 + A1, family = "binomial", data = ObsData0)
logit_Q2 <- predict(Q2_reg, type = "link", newdata = intervened_data)
H2 <- I1/bound(g_abar1_1)
Q2_reg_update <- glm(Q3_star ~ offset(logit_Q2), weights = H2,
family = "binomial", data = ObsData0)
Q2_star <- predict(Q2_reg_update, type = "response")
Q2_bar <- mean(Q2_star)
return(Q2_bar)
}
# Chunk 8: est3
EY_11_tmle0 <- get_TSM_tmle0(abar = c(1,1)); EY_11_tmle0
# Chunk 9: for_loop
B <- 500
estimates_data0 <- matrix(NA, nrow = B, ncol = 3)
colnames(estimates_data0) <- c("Param", "ICE", "TMLE")
for (b in 1:B) {
ObsData0 <- generate_data0(nrow(ObsData0))
estimates_data0[b, 1] <- get_TSM_param_gcomp0(abar = c(1,1))
estimates_data0[b, 2] <- ICE_gcomp0_fun(abar = c(1,1))
estimates_data0[b, 3] <- get_TSM_tmle0(abar = c(1,1))
}
output <- data.frame(
"bias" = colMeans(estimates_data0 - Psi.F0),
"variance" = diag(var(estimates_data0)),
"MSE" = colMeans((estimates_data0 - Psi.F0)^2)); output
# Chunk 10: rescale
rescale_0to1 <- function(y) {
rescaled_y = (y - min(y)) / (max(y) - min(y))
return(rescaled_y)
}
# Chunk 11: param_gcomp2
get_TSM_param_gcomp2 <- function(abar) {
QY_reg <- glm(Y ~ L1 + A1 + L2 + A2 + L3 + A3 + L4 + A4, data = ObsData2, family = "gaussian")
QL2_reg <- glm(L2 ~ L1 + A1, data = ObsData2, family = "gaussian")
QL3_reg <- glm(L3 ~ L1 + A1 + L2 + A2, data = ObsData2, family = "gaussian")
QL4_reg <- glm(L4 ~ L1 + A1 + L2 + A2 + L3 + A3, data = ObsData2, family = "gaussian")
S <- 10000
l1 <- sample(ObsData2$L1, S, replace=T)
Q_L2 <- predict(QL2_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1]))
l2 <- rnorm(S, mean = Q_L2, sd = sd(ObsData2$L2))
Q_L3 <- predict(QL3_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2]))
l3 <- rnorm(S, mean = Q_L3, sd = sd(ObsData2$L3))
Q_L4 <- predict(QL4_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2],
L3 = l3,
A3 = abar[3]))
l4 <- sample(ObsData2$L4, S, replace=T)
Q_Y <- predict(QY_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2],
L3 = l3,
A3 = abar[3],
L4 = l4,
A4 = abar[4]))
y <- rnorm(S, mean = Q_Y, sd = sd(ObsData2$Y))
y_bar <- mean(y)
return(y_bar)
}
# Chunk 12: est4
EY_11_Param2 <- get_TSM_param_gcomp2(abar = c(1,1,1,1)) -
get_TSM_param_gcomp2(abar = c(0,0,0,0)); EY_11_Param2
# Chunk 13: interated_conditional_expectation_gcomp2
ICE_gcomp2_fun <- function(abar) {
intervened_data <- ObsData2
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
intervened_data$A3 <- abar[3]
intervened_data$A4 <- abar[4]
#rescale Y to be between 0 and Y
Y_scaled <- rescale_0to1(ObsData2$Y)
Q5_reg <- glm(Y_scaled ~ L1 + A1 + L2 + A2 + L3 + A3 + L4 + A4,
family = "quasibinomial", data = ObsData2)
Q5 <- predict(Q5_reg, type = "response", newdata = intervened_data)
Q4_reg <- glm(Q5 ~ L1 + A1 + L2 + A2 + L3 + A3, family = "gaussian", data = ObsData2)
Q4 <- predict(Q4_reg, type = "response", newdata = intervened_data)
Q3_reg <- glm(Q4 ~ L1 + A1 + L2 + A2, family = "gaussian", data = ObsData2)
Q3 <- predict(Q3_reg, type = "response", newdata = intervened_data)
Q2_reg <- glm(Q3 ~ L1 + A1, family = "gaussian", data = ObsData2)
Q2 <- predict(Q2_reg, type = "response", newdata = intervened_data)
Q2_bar <- mean(Q2) * (max(ObsData2$Y) - min(ObsData2$Y)) + min(ObsData2$Y)
return(Q2_bar)
}
# Chunk 14: est5
EY_11_ice2 <- ICE_gcomp2_fun(abar = c(1,1,1,1)) - ICE_gcomp2_fun(abar = c(0,0,0,0)); EY_11_ice2
# Chunk 15: TMLE2
get_TSM_tmle2 <- function(abar) {
intervened_data <- ObsData2
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
intervened_data$A3 <- abar[3]
intervened_data$A4 <- abar[4]
#estimate treatment mechanism at each point
gA1_reg <- glm(A1 ~ L1, family = "binomial", data = ObsData2)
gA2_reg <- glm(A2 ~ L1 + A1 + L2, family = "binomial", data = ObsData2)
gA3_reg <- glm(A3 ~ L1 + A1 + L2 + A2 + L3, family = "binomial", data = ObsData2)
gA4_reg <- glm(A4 ~ L1 + A1 + L2 + A2 + L3 + A3 + L4, family = "binomial", data = ObsData2)
#compute predicted probability of getting 8 hours of sleep at time t given observed past
g_abar1_1 <- predict(gA1_reg, type = "response")
g_abar2_1 <- predict(gA2_reg, type = "response")
g_abar3_1 <- predict(gA3_reg, type = "response")
g_abar4_1 <- predict(gA4_reg, type = "response")
#compute predicted probability of observed exposure A(t) given history
g_abar1 <- ifelse(ObsData2$A1, g_abar1_1, 1-g_abar1_1)
g_abar2 <- ifelse(ObsData2$A2, g_abar2_1, 1-g_abar2_1)
g_abar3 <- ifelse(ObsData2$A3, g_abar3_1, 1-g_abar3_1)
g_abar4 <- ifelse(ObsData2$A4, g_abar4_1, 1-g_abar4_1)
#calculate weights
I1 <- ObsData2$A1 == abar[1]
I2 <- ObsData2$A1 == abar[1] & ObsData2$A2 == abar[2]
I3 <- ObsData2$A1 == abar[1] & ObsData2$A2 == abar[2] & ObsData2$A3 == abar[3]
I4 <- ObsData2$A1 == abar[1] & ObsData2$A2 == abar[2] & ObsData2$A3 == abar[3] &
ObsData2$A4 == abar[4]
#rescale Y to be between 0 and Y
Y_scaled <- rescale_0to1(ObsData2$Y)
# t = 5
Q5_reg <- glm(Y_scaled ~ L1 + A1 + L2 + A2 + L3 + A3 + L4 + A4, data = ObsData2,
family = "quasibinomial")
logit_Q5 <- predict(Q5_reg, type = "link", newdata = intervened_data)
H5 <- I4/bound(g_abar1 * g_abar2 * g_abar3 * g_abar4)
Q5_reg_update <- glm(Y_scaled ~ offset(logit_Q5), weights = H5, family = "quasibinomial")
Q5_star <- predict(Q5_reg_update, type = "response")
# t = 4
Q4_reg <- glm(Q5_star ~ L1 + A1 + L2 + A2 + L3 + A3, data = ObsData2, family = "quasibinomial")
logit_Q4 <- predict(Q4_reg, type = "link", newdata = intervened_data)
H4 <- I3/bound(g_abar1 * g_abar2 * g_abar3)
Q4_reg_update <- glm(Q5_star ~ offset(logit_Q4), weights = H4, family = "quasibinomial")
Q4_star <- predict(Q4_reg_update, type = "response")
# t = 3
Q3_reg <- glm(Q4_star ~ L1 + A1 + L2 + A2, family = "quasibinomial", data = ObsData2)
logit_Q3 <- predict(Q3_reg, type = "link", newdata = intervened_data)
H3 <- I2/bound(g_abar1 * g_abar2)
Q3_reg_update <- glm(Q4_star ~ offset(logit_Q3), weights = H3,
family = "quasibinomial", data = ObsData2)
Q3_star <- predict(Q3_reg_update, type = "response")
# t = 2
Q2_reg <- glm(Q3_star ~ L1 + A1, family = "quasibinomial", data = ObsData2)
logit_Q2 <- predict(Q2_reg, type = "link", newdata = intervened_data)
H2 <- I1/bound(g_abar1)
Q2_reg_update <- glm(Q3_star ~ offset(logit_Q2), weights = H2,
family = "quasibinomial", data = ObsData2)
Q2_star <- predict(Q2_reg_update, type = "response")
Q2_bar <- mean(Q2_star) * (max(ObsData2$Y) - min(ObsData2$Y)) + min(ObsData2$Y)
return(Q2_bar)
}
# Chunk 16: est6
EY_11_tmle2 <- get_TSM_tmle2(abar = c(1,1,1,1)) - get_TSM_tmle2(abar = c(0,0,0,0)); EY_11_tmle2
B <- 5
estimates_data2 <- matrix(NA, nrow = B, ncol = 3)
colnames(estimates_data2) <- c("Param", "ICE", "TMLE")
for (b in 1:B) {
ObsData2 <- generate_data2(nrow(ObsData2))
estimates_data2[b, 1] <- get_TSM_param_gcomp2(abar = c(1,1,1,1)) -
get_TSM_param_gcomp2(abar = c(0,0,0,0))
estimates_data2[b, 2] <- ICE_gcomp2_fun(abar = c(1,1,1,1)) - ICE_gcomp2_fun(abar = c(0,0,0,0))
estimates_data2[b, 3] <- get_TSM_tmle2(abar = c(1,1,1,1)) - get_TSM_tmle2(abar = c(0,0,0,0))
}
output2 <- data.frame(
"bias" = colMeans(estimates_data2 - Psi.F2),
"variance" = diag(var(estimates_data2)),
"MSE" = colMeans((estimates_data2 - Psi.F2)^2)); output2
# Chunk 1: setup
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 6/DataStructure0.RData")
load("C:/Users/shell/Dropbox/GRAD SCHOOL/Causal II/Labs/Lab 6/DataStructure2.RData")
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
# Chunk 2: truncate
bound <- function(x) {
x[x>.99] <- .99
x[x<.01] <- .01
return(x)
}
# Chunk 3: parametric_gcomp
get_TSM_param_gcomp0 <- function(abar) {
QY_reg <- glm(Y ~ L1 + A1 + L2 + A2, data = ObsData0, family = "binomial")
QL2_reg <- glm(L2 ~ L1 + A1, data = ObsData0, family = "binomial")
S <- 10000
l1 <- sample(ObsData0$L1, S, replace=T)
Q_L2 <- predict(QL2_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1]))
l2 <- rbinom(S, size = 1, prob = Q_L2)
Q_Y <- predict(QY_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2]))
y <- rbinom(S, size = 1, prob = Q_Y)
y_bar <- mean(y)
return(y_bar)
}
# Chunk 4: est_1
EY_11_Param <- get_TSM_param_gcomp0(abar = c(1,1)); EY_11_Param
# Chunk 5: interated_conditional_expectation_gcomp
ICE_gcomp0_fun <- function(abar) {
intervened_data <- ObsData0
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
Q3_reg <- glm(Y ~ L1 + A1 + L2 + A2, family = "binomial", data = ObsData0)
Q3 <- predict(Q3_reg, type = "response", newdata = intervened_data)
Q2_reg <- glm(Q3 ~ L1 + A1, family = "binomial", data = ObsData0)
Q2 <- predict(Q2_reg, type = "response", newdata = intervened_data)
Q2_bar <- mean(Q2)
return(Q2_bar)
}
# Chunk 6: est_2
EY_11_ice0 <- ICE_gcomp0_fun(abar = c(1,1)); EY_11_ice0
# Chunk 7: TMLE
get_TSM_tmle0 <- function(abar) {
intervened_data <- ObsData0
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
gA1_reg <- glm(A1 ~ L1, family = "binomial", data = ObsData0)
gA2_reg <- glm(A2 ~ L1 + L2, family = "binomial", data = ObsData0)
g_abar1_1 <- predict(gA1_reg, type = "response")
g_abar2_1 <- predict(gA2_reg, type = "response")
I1 <- ObsData0$A1 == abar[1]
I2 <- ObsData0$A1 == abar[1] & ObsData0$A2 == abar[2]
# t = 3
Q3_reg <- glm(Y ~ L1 + A1 + L2 + A2, family = "binomial", data = ObsData0)
logit_Q3 <- predict(Q3_reg, type = "link", newdata = intervened_data)
H3 <- I2/bound(g_abar1_1 * g_abar2_1)
Q3_reg_update <- glm(Y ~ offset(logit_Q3), weights = H3,
family = "binomial", data = ObsData0)
Q3_star <- predict(Q3_reg_update, type = "response")
# t = 2
Q2_reg <- glm(Q3_star ~ L1 + A1, family = "binomial", data = ObsData0)
logit_Q2 <- predict(Q2_reg, type = "link", newdata = intervened_data)
H2 <- I1/bound(g_abar1_1)
Q2_reg_update <- glm(Q3_star ~ offset(logit_Q2), weights = H2,
family = "binomial", data = ObsData0)
Q2_star <- predict(Q2_reg_update, type = "response")
Q2_bar <- mean(Q2_star)
return(Q2_bar)
}
# Chunk 8: est3
EY_11_tmle0 <- get_TSM_tmle0(abar = c(1,1)); EY_11_tmle0
# Chunk 9: for_loop
B <- 500
estimates_data0 <- matrix(NA, nrow = B, ncol = 3)
colnames(estimates_data0) <- c("Param", "ICE", "TMLE")
for (b in 1:B) {
ObsData0 <- generate_data0(nrow(ObsData0))
estimates_data0[b, 1] <- get_TSM_param_gcomp0(abar = c(1,1))
estimates_data0[b, 2] <- ICE_gcomp0_fun(abar = c(1,1))
estimates_data0[b, 3] <- get_TSM_tmle0(abar = c(1,1))
}
output <- data.frame(
"bias" = colMeans(estimates_data0 - Psi.F0),
"variance" = diag(var(estimates_data0)),
"MSE" = colMeans((estimates_data0 - Psi.F0)^2)); output
# Chunk 10: rescale
rescale_0to1 <- function(y) {
rescaled_y = (y - min(y)) / (max(y) - min(y))
return(rescaled_y)
}
# Chunk 11: param_gcomp2
get_TSM_param_gcomp2 <- function(abar) {
QY_reg <- glm(Y ~ L1 + A1 + L2 + A2 + L3 + A3 + L4 + A4, data = ObsData2, family = "gaussian")
QL2_reg <- glm(L2 ~ L1 + A1, data = ObsData2, family = "gaussian")
QL3_reg <- glm(L3 ~ L1 + A1 + L2 + A2, data = ObsData2, family = "gaussian")
QL4_reg <- glm(L4 ~ L1 + A1 + L2 + A2 + L3 + A3, data = ObsData2, family = "gaussian")
S <- 10000
l1 <- sample(ObsData2$L1, S, replace=T)
Q_L2 <- predict(QL2_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1]))
l2 <- rnorm(S, mean = Q_L2, sd = sd(ObsData2$L2))
Q_L3 <- predict(QL3_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2]))
l3 <- rnorm(S, mean = Q_L3, sd = sd(ObsData2$L3))
Q_L4 <- predict(QL4_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2],
L3 = l3,
A3 = abar[3]))
l4 <- rnorm(S, mean = Q_L4, sd = sd(ObsData2$L4))
Q_Y <- predict(QY_reg, type = "response", newdata = data.frame(L1 = l1,
A1 = abar[1],
L2 = l2,
A2 = abar[2],
L3 = l3,
A3 = abar[3],
L4 = l4,
A4 = abar[4]))
y <- rnorm(S, mean = Q_Y, sd = sd(ObsData2$Y))
y_bar <- mean(y)
return(y_bar)
}
# Chunk 12: est4
EY_11_Param2 <- get_TSM_param_gcomp2(abar = c(1,1,1,1)) -
get_TSM_param_gcomp2(abar = c(0,0,0,0)); EY_11_Param2
# Chunk 13: interated_conditional_expectation_gcomp2
ICE_gcomp2_fun <- function(abar) {
intervened_data <- ObsData2
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
intervened_data$A3 <- abar[3]
intervened_data$A4 <- abar[4]
#rescale Y to be between 0 and Y
Y_scaled <- rescale_0to1(ObsData2$Y)
Q5_reg <- glm(Y_scaled ~ L1 + A1 + L2 + A2 + L3 + A3 + L4 + A4,
family = "quasibinomial", data = ObsData2)
Q5 <- predict(Q5_reg, type = "response", newdata = intervened_data)
Q4_reg <- glm(Q5 ~ L1 + A1 + L2 + A2 + L3 + A3, family = "gaussian", data = ObsData2)
Q4 <- predict(Q4_reg, type = "response", newdata = intervened_data)
Q3_reg <- glm(Q4 ~ L1 + A1 + L2 + A2, family = "gaussian", data = ObsData2)
Q3 <- predict(Q3_reg, type = "response", newdata = intervened_data)
Q2_reg <- glm(Q3 ~ L1 + A1, family = "gaussian", data = ObsData2)
Q2 <- predict(Q2_reg, type = "response", newdata = intervened_data)
Q2_bar <- mean(Q2) * (max(ObsData2$Y) - min(ObsData2$Y)) + min(ObsData2$Y)
return(Q2_bar)
}
# Chunk 14: est5
EY_11_ice2 <- ICE_gcomp2_fun(abar = c(1,1,1,1)) - ICE_gcomp2_fun(abar = c(0,0,0,0)); EY_11_ice2
# Chunk 15: TMLE2
get_TSM_tmle2 <- function(abar) {
intervened_data <- ObsData2
intervened_data$A1 <- abar[1]
intervened_data$A2 <- abar[2]
intervened_data$A3 <- abar[3]
intervened_data$A4 <- abar[4]
#estimate treatment mechanism at each point
gA1_reg <- glm(A1 ~ L1, family = "binomial", data = ObsData2)
gA2_reg <- glm(A2 ~ L1 + A1 + L2, family = "binomial", data = ObsData2)
gA3_reg <- glm(A3 ~ L1 + A1 + L2 + A2 + L3, family = "binomial", data = ObsData2)
gA4_reg <- glm(A4 ~ L1 + A1 + L2 + A2 + L3 + A3 + L4, family = "binomial", data = ObsData2)
#compute predicted probability of getting 8 hours of sleep at time t given observed past
g_abar1_1 <- predict(gA1_reg, type = "response")
g_abar2_1 <- predict(gA2_reg, type = "response")
g_abar3_1 <- predict(gA3_reg, type = "response")
g_abar4_1 <- predict(gA4_reg, type = "response")
#compute predicted probability of observed exposure A(t) given history
g_abar1 <- ifelse(ObsData2$A1, g_abar1_1, 1-g_abar1_1)
g_abar2 <- ifelse(ObsData2$A2, g_abar2_1, 1-g_abar2_1)
g_abar3 <- ifelse(ObsData2$A3, g_abar3_1, 1-g_abar3_1)
g_abar4 <- ifelse(ObsData2$A4, g_abar4_1, 1-g_abar4_1)
#calculate weights
I1 <- ObsData2$A1 == abar[1]
I2 <- ObsData2$A1 == abar[1] & ObsData2$A2 == abar[2]
I3 <- ObsData2$A1 == abar[1] & ObsData2$A2 == abar[2] & ObsData2$A3 == abar[3]
I4 <- ObsData2$A1 == abar[1] & ObsData2$A2 == abar[2] & ObsData2$A3 == abar[3] &
ObsData2$A4 == abar[4]
#rescale Y to be between 0 and Y
Y_scaled <- rescale_0to1(ObsData2$Y)
# t = 5
Q5_reg <- glm(Y_scaled ~ L1 + A1 + L2 + A2 + L3 + A3 + L4 + A4, data = ObsData2,
family = "quasibinomial")
logit_Q5 <- predict(Q5_reg, type = "link", newdata = intervened_data)
H5 <- I4/bound(g_abar1 * g_abar2 * g_abar3 * g_abar4)
Q5_reg_update <- glm(Y_scaled ~ offset(logit_Q5), weights = H5, family = "quasibinomial")
Q5_star <- predict(Q5_reg_update, type = "response")
# t = 4
Q4_reg <- glm(Q5_star ~ L1 + A1 + L2 + A2 + L3 + A3, data = ObsData2, family = "quasibinomial")
logit_Q4 <- predict(Q4_reg, type = "link", newdata = intervened_data)
H4 <- I3/bound(g_abar1 * g_abar2 * g_abar3)
Q4_reg_update <- glm(Q5_star ~ offset(logit_Q4), weights = H4, family = "quasibinomial")
Q4_star <- predict(Q4_reg_update, type = "response")
# t = 3
Q3_reg <- glm(Q4_star ~ L1 + A1 + L2 + A2, family = "quasibinomial", data = ObsData2)
logit_Q3 <- predict(Q3_reg, type = "link", newdata = intervened_data)
H3 <- I2/bound(g_abar1 * g_abar2)
Q3_reg_update <- glm(Q4_star ~ offset(logit_Q3), weights = H3,
family = "quasibinomial", data = ObsData2)
Q3_star <- predict(Q3_reg_update, type = "response")
# t = 2
Q2_reg <- glm(Q3_star ~ L1 + A1, family = "quasibinomial", data = ObsData2)
logit_Q2 <- predict(Q2_reg, type = "link", newdata = intervened_data)
H2 <- I1/bound(g_abar1)
Q2_reg_update <- glm(Q3_star ~ offset(logit_Q2), weights = H2,
family = "quasibinomial", data = ObsData2)
Q2_star <- predict(Q2_reg_update, type = "response")
Q2_bar <- mean(Q2_star) * (max(ObsData2$Y) - min(ObsData2$Y)) + min(ObsData2$Y)
return(Q2_bar)
}
# Chunk 16: est6
EY_11_tmle2 <- get_TSM_tmle2(abar = c(1,1,1,1)) - get_TSM_tmle2(abar = c(0,0,0,0)); EY_11_tmle2
# Chunk 17: for_loop2
B <- 5
estimates_data2 <- matrix(NA, nrow = B, ncol = 3)
colnames(estimates_data2) <- c("Param", "ICE", "TMLE")
for (b in 1:B) {
ObsData2 <- generate_data2(nrow(ObsData2))
estimates_data2[b, 1] <- get_TSM_param_gcomp2(abar = c(1,1,1,1)) -
get_TSM_param_gcomp2(abar = c(0,0,0,0))
estimates_data2[b, 2] <- ICE_gcomp2_fun(abar = c(1,1,1,1)) - ICE_gcomp2_fun(abar = c(0,0,0,0))
estimates_data2[b, 3] <- get_TSM_tmle2(abar = c(1,1,1,1)) - get_TSM_tmle2(abar = c(0,0,0,0))
}
output2 <- data.frame(
"bias" = colMeans(estimates_data2 - Psi.F2),
"variance" = diag(var(estimates_data2)),
"MSE" = colMeans((estimates_data2 - Psi.F2)^2)); output2
