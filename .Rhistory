knitr::opts_chunk$set(echo = TRUE)
glm.SH <- function(...){suppressMessages(stats::glm(...))}
library(tidyverse)
library(dplyr)
library(ltmle)
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure1.RData")
head(ObsData1)
View(generate_data1)
View(generate_data1_intervene)
ltmle.SH <- function(...){suppressMessages(ltmle::ltmle(...))}
knitr::opts_chunk$set(echo = TRUE)
ltmle.SH <- function(...){suppressMessages(ltmle::ltmle(...))}
library(tidyverse)
library(dplyr)
library(ltmle)
ObsData1$DeltaY[is.na(ObsData1$DeltaY)] <- 0
results1 <- ltmle.SH(ObsData1,
Anodes=c("A", "Delta"),
Lnodes = "L",
Ynodes = "DeltaY",
abar = list(c(1,1),c(0,1)),
stratify = TRUE,
Qform=c(L="Q.kplus1~W+A",
DeltaY="Q.kplus1~W+A+L+A:W"),
gform = c(A= "A ~W",
Delta = "Delta ~ W + A + L")
)
results1.gcomp <- ltmle.SH(ObsData1,
Anodes=c("A", "Delta"),
Lnodes = "L",
Ynodes = "DeltaY",
abar = list(c(1,1),c(0,1)),
stratify = TRUE,
Qform=c(L="Q.kplus1~W+A",
DeltaY="Q.kplus1~W+A+L+A:W"),
gform = c(A= "A ~W",
Delta = "Delta ~ W + A + L"),
gcomp = T
)
sum1tmle <- summary(results1, "tmle")
sum1iptw <- summary(results1, "iptw")
sumgcomp <- summary(results1.gcomp, "gcomp")
sum1tmle
sum1iptw
sum1gcomp
sum1gcomp <- summary(results1.gcomp, "gcomp")
sum1gcomp
sum1tmle$estimator
sum1tmle$effect.measures$ATE
sum1tmle$effect.measures$ATE$estimate
sum1tmle$effect.measures$ATE$CI
sum1tmle$effect.measures$ATE$CI[1]
sum1tmle$effect.measures$ATE$CI[2]
(round(sum1tmle$effect.measures$ATE$CI[1],2), round(sum1tmle$effect.measures$ATE$CI[2],2))
round(sum1tmle$effect.measures$ATE$CI[1],2)
round(sum1tmle$effect.measures$ATE$CI[2],2)
load("DataStructure2.RData")
head(ObsData2)
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure2.RData")
head(ObsData2)
results2 <- ltmle.SH(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
abar = list(c(1,1,1,1), c(0,0,0,0))
)
results2.gcomp <- ltmle.SH(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
abar = list(c(1,1,1,1), c(0,0,0,0)),
gcomp = T
)
sum2tmle <- summary(results2, "tmle")
sum2iptw <- summary(results2, "iptw")
sum2gcomp <- summary(results2.gcomp, "gcomp")
sum2tmle$effect.measures$ATE$estimate
sum2iptw$effect.measures$ATE$estimate
sum2gcomp$effect.measures$ATE$estimate
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure4.RData")
head(ObsData4)
head(ObsData4)
ObsData4$C1 = BinaryToCensoring(is.censored = ObsData4$C1)
ObsData4$C2 = BinaryToCensoring(is.censored = ObsData4$C2)
results4 <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,1)),
survivalOutcome = TRUE
)
results4.gcomp <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,1)),
survivalOutcome = TRUE,
gcomp = T
)
sum4tmle <- summary(results4, "tmle")
sum4iptw <- summary(results4, "iptw")
sum4gcomp <- summary(results4.gcomp, "gcomp")
sum4tmle$effect.measures$ATE$estimate
sum4iptw$effect.measures$ATE$estimate
sum4gcomp$effect.measures$ATE$estimate
ObsData4$C1 = BinaryToCensoring(is.censored = ObsData4$C1)
ObsData4$C2 = BinaryToCensoring(is.censored = ObsData4$C2)
results4 <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,0)),
survivalOutcome = TRUE
)
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure4.RData")
head(ObsData4)
ObsData4$C1 = BinaryToCensoring(is.censored = ObsData4$C1)
ObsData4$C2 = BinaryToCensoring(is.censored = ObsData4$C2)
head(ObsData4)
results4 <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,0)),
survivalOutcome = TRUE
)
results4.gcomp <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,1)),
survivalOutcome = TRUE,
gcomp = T
)
sum4tmle <- summary(results4, "tmle")
sum4iptw <- summary(results4, "iptw")
sum4gcomp <- summary(results4.gcomp, "gcomp")
sum4tmle$effect.measures$ATE$estimate
sum4iptw$effect.measures$ATE$estimate
sum4gcomp$effect.measures$ATE$estimate
ObsData4$C1 = BinaryToCensoring(is.censored = ObsData4$C1)
ObsData4$C2 = BinaryToCensoring(is.censored = ObsData4$C2)
head(ObsData4)
results4 <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,0)),
survivalOutcome = TRUE
)
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure4.RData")
head(ObsData4)
ObsData4$C1 = BinaryToCensoring(is.censored = ObsData4$C1)
ObsData4$C2 = BinaryToCensoring(is.censored = ObsData4$C2)
head(ObsData4)
results4 <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,0)),
survivalOutcome = TRUE
)
results4.gcomp <- ltmle.SH(ObsData4,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Cnodes = c("C1", "C2"),
Ynodes = c("Y2","Y3"),
abar = list(c(1,1), c(0,0)),
survivalOutcome = TRUE,
gcomp = T
)
sum4tmle <- summary(results4, "tmle")
sum4iptw <- summary(results4, "iptw")
sum4gcomp <- summary(results4.gcomp, "gcomp")
sum4tmle$effect.measures$ATE$estimate
sum4iptw$effect.measures$ATE$estimate
sum4gcomp$effect.measures$ATE$estimate
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure0_dtr.RData")
head(ObsData0)
head(ObsData0_dtr)
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure0_dtr.RData")
head(ObsData0_dtr)
results0 <- ltmle.SH(ObsData0_dtr,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Ynodes = "Y",
abar = abar,
Qform=c(L2="Q.kplus1~L1+A1",
Y="Q.kplus1~L1:A1+L2:A2")
)
abar <- cbind(ObsData0_dtr$L1<0, ObsData0_dtr$L2 <0)
abar <- cbind(ObsData0_dtr$L1<0, ObsData0_dtr$L2 <0)
results0 <- ltmle.SH(ObsData0_dtr,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Ynodes = "Y",
abar = abar,
Qform=c(L2="Q.kplus1~L1+A1",
Y="Q.kplus1~L1:A1+L2:A2")
)
results0.gcomp <- ltmle.SH(ObsData0_dtr,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Ynodes = "Y",
abar = abar,
Qform=c(L2="Q.kplus1~L1+A1",
Y="Q.kplus1~L1:A1+L2:A2"),
gcomp = T
)
sum0tmle <- summary(results0, "tmle")
sum0iptw <- summary(results0, "iptw")
sum0gcomp <- summary(results0.gcomp, "gcomp")
sum0tmle$effect.measures$ATE$estimate
sum0iptw$effect.measures$ATE$estimate
sum0gcomp$effect.measures$ATE$estimate
setwd("~/Documents/Berkeley PhD Stuff/Classes/252E/Labs")
load("DataStructure0_dtr.RData")
head(ObsData0_dtr)
abar <- cbind(ObsData0_dtr$L1<0, ObsData0_dtr$L2 <0)
results0 <- ltmle.SH(ObsData0_dtr,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Ynodes = "Y",
abar = abar,
Qform=c(L2="Q.kplus1~L1+A1",
Y="Q.kplus1~L1:A1+L2:A2")
)
results0.gcomp <- ltmle.SH(ObsData0_dtr,
Anodes= c("A1", "A2"),
Lnodes = c("L1", "L2"),
Ynodes = "Y",
abar = abar,
Qform=c(L2="Q.kplus1~L1+A1",
Y="Q.kplus1~L1:A1+L2:A2"),
gcomp = T
)
sum0tmle <- summary(results0, "tmle")
sum0iptw <- summary(results0, "iptw")
sum0gcomp <- summary(results0.gcomp, "gcomp")
sum0tmle$effect.measures$ATE$estimate
sum0iptw$effect.measures$ATE$estimate
sum0gcomp$effect.measures$ATE$estimate
sum0gcomp
sum0tmle$treatment
sum0tmle$treatment$estimate
sum0tmle$treatment$estimate
sum0iptw$treatment$estimate
sum0gcomp$treatment$estimate
sum0tmle
sum0tmle$treatment$CI
#set n equal to number of rows
n = nrow(ObsData2)
# initialize regimes with dim n X num Anodes = 4 X num CF regimes = 16
regimes = array(dim=c(n,4,16))
#initialize sumA
sumA= rep(NA,16)
#make matrix of possible CF regimes
abar = as.matrix(expand.grid(c(0,1),c(0,1), c(0,1), c(0,1)))
colnames(abar) = c("A1","A2","A3", "A4")
#fill in regimes and sumA
for(i in 1:16){
regimes[,,i]=matrix(rep(abar[i,],n), byrow=TRUE, nrow=n)
sumA[i] =rowSums(regimes[,,i])[1]
}
#initialize and define summary measures
summary.measures = array(dim=c(16,1,1))
dimnames(summary.measures)[[2]]=list("sumA")
summary.measures[,,1]=matrix(sumA)
#define working.msm = character formula for working MSM
working.msm = "Y ~ sumA"
#estimate parameter using ltmleMSM function
results2.MSM ~ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
num.weights = NULL)
sum.results2.MSM.tmle= summary(results2.MSM, "tmle")
#set n equal to number of rows
n = nrow(ObsData2)
# initialize regimes with dim n X num Anodes = 4 X num CF regimes = 16
regimes = array(dim=c(n,4,16))
#initialize sumA
sumA= rep(NA,16)
#make matrix of possible CF regimes
abar = as.matrix(expand.grid(c(0,1),c(0,1), c(0,1), c(0,1)))
colnames(abar) = c("A1","A2","A3", "A4")
#fill in regimes and sumA
for(i in 1:16){
regimes[,,i]=matrix(rep(abar[i,],n), byrow=TRUE, nrow=n)
sumA[i] =rowSums(regimes[,,i])[1]
}
#initialize and define summary measures
summary.measures = array(dim=c(16,1,1))
dimnames(summary.measures)[[2]]=list("sumA")
summary.measures[,,1]=matrix(sumA)
#define working.msm = character formula for working MSM
working.msm = "Y ~ sumA"
#estimate parameter using ltmleMSM function
results2.MSM ~ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
num.weights = NULL)
sum.results2.MSM.tmle= summary(results2.MSM, "tmle")
#estimate parameter using ltmleMSM function
results2.MSM ~ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
num.weights = NULL)
View(results2.gcomp)
View(results2)
results2.MSM ~ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
num.weights = NULL)
#estimate parameter using ltmleMSM function
results2.MSM ~ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
msm.weights = NULL)
sum.results2.MSM.tmle= summary(results2.MSM, "tmle")
#set n equal to number of rows
n = nrow(ObsData2)
# initialize regimes with dim n X num Anodes = 4 X num CF regimes = 16
regimes = array(dim=c(n,4,16))
#initialize sumA
sumA= rep(NA,16)
#make matrix of possible CF regimes
abar = as.matrix(expand.grid(c(0,1),c(0,1), c(0,1), c(0,1)))
colnames(abar) = c("A1","A2","A3", "A4")
#fill in regimes and sumA
for(i in 1:16){
regimes[,,i]=matrix(rep(abar[i,],n), byrow=TRUE, nrow=n)
sumA[i] =rowSums(regimes[,,i])[1]
}
#initialize and define summary measures
summary.measures = array(dim=c(16,1,1))
dimnames(summary.measures)[[2]]=list("sumA")
summary.measures[,,1]=matrix(sumA)
#define working.msm = character formula for working MSM
working.msm = "Y ~ sumA"
#estimate parameter using ltmleMSM function
results2.MSM ~ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
msm.weights = NULL)
sum.results2.MSM.tmle= summary(results2.MSM, "tmle")
#estimate parameter using ltmleMSM function
results2.MSM ~ltmle::ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
msm.weights = NULL)
sum.results2.MSM.tmle= summary(results2.MSM, "tmle")
#estimate parameter using ltmleMSM function
results2.MSM <- ltmleMSM(ObsData2,
Anodes= c("A1", "A2", "A3", "A4"),
Lnodes = c("L1", "L2", "L3", "L4"),
Ynodes = "Y",
working.msm = working.msm,
regimes = regimes,
summary.measures = summary.measures,
msm.weights = NULL)
sum.results2.MSM.tmle= summary(results2.MSM, "tmle")
sum.results2.MSM.tmle
um.results2.MSM.tmle$effect.measures$ATE$estimate
sum.results2.MSM.tmle$effect.measures$ATE$estimate
sum.results2.MSM.tmle
sum.results2.MSM.tmle$estimator
sum.results2.MSM.tmle$variance.estimate.ratio
sum.results2.MSM.tmle$transformOutcome
sum.results2.MSM.tmle$cmat
sum.results2.MSM.tmle$cmat[1,2]
sum.results2.MSM.tmle$cmat$sumA
round(sum.results2.MSM.tmle$cmat[3,2],2)
sum.results2.MSM.tmle$cmat[3,2]
sum.results2.MSM.tmle$cmat[2,3]